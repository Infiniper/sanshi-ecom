-- Sanshi H2O Database Schema for Supabase (PostgreSQL)
-- This script creates the initial tables for categories, products, and images.
-- It includes detailed comments for each field and example INSERT statements.

-- 1. Create the 'categories' table
-- This table stores different product categories like 'Drinking Water' or 'Flavored Soda'.
CREATE TABLE public.categories (
  -- id: Unique identifier for the category (Primary Key). Automatically generated.
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  -- name: The display name of the category (e.g., "Flavored Soda"). Cannot be empty.
  name text NOT NULL,
  -- slug: A URL-friendly version of the name (e.g., "flavored-soda"). Must be unique.
  slug text UNIQUE,
  -- description: A short text describing the category.
  description text,
  -- image_url: A URL pointing to an image that represents the category.
  image_url text,
  -- created_at: Timestamp of when the category was created. Automatically set to the current time.
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Add a comment to the table for clarity
COMMENT ON TABLE public.categories IS 'Stores product categories.';

-- Example INSERT statement for the 'categories' table:
-- INSERT INTO public.categories (name, slug, description, image_url)
-- VALUES ('Flavored Soda', 'flavored-soda', 'Refreshing carbonated drinks with a citrus twist.', 'https://example.com/images/soda.jpg');


-- 2. Create the 'products' table
-- This table holds all the individual product details.
-- It includes a foreign key 'category_id' that links each product to a category.
CREATE TABLE public.products (
  -- id: Unique identifier for the product (Primary Key). Automatically generated.
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  -- category_id: Links to a category in the 'categories' table. If the category is deleted, this value becomes NULL.
  category_id bigint REFERENCES public.categories(id) ON DELETE SET NULL,
  -- name: The display name of the product (e.g., "Classic Neembu Soda"). Cannot be empty.
  name text NOT NULL,
  -- description: A detailed description of the product.
  description text,
  -- price: The price of the product. Stored as a numeric type for accuracy with currency.
  price numeric(10, 2) NOT NULL,
  -- sku: Stock Keeping Unit, a unique code for inventory tracking.
  sku text UNIQUE,
  -- in_stock: A boolean value (true/false) indicating if the product is available. Defaults to true.
  in_stock boolean DEFAULT true,
  -- created_at: Timestamp of when the product was added. Automatically set to the current time.
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Add comments for the table and key columns
COMMENT ON TABLE public.products IS 'Stores individual product information.';
COMMENT ON COLUMN public.products.category_id IS 'Foreign key to the categories table.';

-- Example INSERT statement for the 'products' table:
-- Note: 'category_id' should be a valid ID from the 'categories' table (e.g., 1).
-- INSERT INTO public.products (category_id, name, description, price, sku, in_stock)
-- VALUES (1, 'Classic Neembu Soda', 'A timeless classic, perfectly balanced sweet and sour.', 25.00, 'SNSH-NS-001', true);


-- 3. Create the 'images' table
-- This table stores URLs for product images, allowing for multiple images per product.
-- It includes a foreign key 'product_id' that links each image to a product.
CREATE TABLE public.images (
  -- id: Unique identifier for the image record (Primary Key). Automatically generated.
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  -- product_id: Links to a product in the 'products' table. If the product is deleted, its images are also deleted.
  product_id bigint REFERENCES public.products(id) ON DELETE CASCADE,
  -- url: The full URL where the image file is hosted. Cannot be empty.
  url text NOT NULL,
  -- alt_text: A short description of the image for accessibility (e.g., for screen readers).
  alt_text text,
  -- created_at: Timestamp of when the image was uploaded. Automatically set to the current time.
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Add comments for the table and key columns
COMMENT ON TABLE public.images IS 'Stores URLs for product images.';
COMMENT ON COLUMN public.images.product_id IS 'Foreign key to the products table.';

-- Example INSERT statement for the 'images' table:
-- Note: 'product_id' should be a valid ID from the 'products' table (e.g., 1).
-- INSERT INTO public.images (product_id, url, alt_text)
-- VALUES (1, 'https://example.com/images/neembu-soda-front.jpg', 'A front view of the Classic Neembu Soda bottle.');



-- Creating more tables for contacts, orders, order_item;

-- Contacts table
CREATE TABLE IF NOT EXISTS public.contacts (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name text NOT NULL,
  email text,
  message text NOT NULL,
  created_at timestamptz DEFAULT timezone('utc'::text, now()) NOT NULL
);
COMMENT ON TABLE public.contacts IS 'Contact form submissions';

-- Orders table
CREATE TABLE IF NOT EXISTS public.orders (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  customer_name text NOT NULL,
  customer_phone text NOT NULL,
  customer_email text,
  customer_address text NOT NULL,
  total_amount numeric(10,2) NOT NULL,
  status text DEFAULT 'pending',
  created_at timestamptz DEFAULT timezone('utc'::text, now()) NOT NULL
);
COMMENT ON TABLE public.orders IS 'Customer orders';

-- Order items table
CREATE TABLE IF NOT EXISTS public.order_items (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  order_id bigint REFERENCES public.orders(id) ON DELETE CASCADE,
  product_id bigint REFERENCES public.products(id) ON DELETE RESTRICT,
  quantity integer NOT NULL,
  unit_price numeric(10,2) NOT NULL
);
COMMENT ON TABLE public.order_items IS 'Items inside orders';





